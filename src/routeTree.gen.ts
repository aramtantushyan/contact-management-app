/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactsLayoutImport } from './routes/_contactsLayout'
import { Route as ContactsLayoutIndexImport } from './routes/_contactsLayout/index'
import { Route as ContactsLayoutContactsAddImport } from './routes/_contactsLayout/contacts_.add'
import { Route as ContactsLayoutContactsContactIdImport } from './routes/_contactsLayout/contacts.$contactId'
import { Route as ContactsLayoutContactsContactIdEditImport } from './routes/_contactsLayout/contacts_.$contactId.edit'

// Create/Update Routes

const ContactsLayoutRoute = ContactsLayoutImport.update({
  id: '/_contactsLayout',
  getParentRoute: () => rootRoute,
} as any)

const ContactsLayoutIndexRoute = ContactsLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContactsLayoutRoute,
} as any)

const ContactsLayoutContactsAddRoute = ContactsLayoutContactsAddImport.update({
  id: '/contacts_/add',
  path: '/contacts/add',
  getParentRoute: () => ContactsLayoutRoute,
} as any)

const ContactsLayoutContactsContactIdRoute =
  ContactsLayoutContactsContactIdImport.update({
    id: '/contacts/$contactId',
    path: '/contacts/$contactId',
    getParentRoute: () => ContactsLayoutRoute,
  } as any)

const ContactsLayoutContactsContactIdEditRoute =
  ContactsLayoutContactsContactIdEditImport.update({
    id: '/contacts_/$contactId/edit',
    path: '/contacts/$contactId/edit',
    getParentRoute: () => ContactsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_contactsLayout': {
      id: '/_contactsLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContactsLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_contactsLayout/': {
      id: '/_contactsLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ContactsLayoutIndexImport
      parentRoute: typeof ContactsLayoutImport
    }
    '/_contactsLayout/contacts/$contactId': {
      id: '/_contactsLayout/contacts/$contactId'
      path: '/contacts/$contactId'
      fullPath: '/contacts/$contactId'
      preLoaderRoute: typeof ContactsLayoutContactsContactIdImport
      parentRoute: typeof ContactsLayoutImport
    }
    '/_contactsLayout/contacts_/add': {
      id: '/_contactsLayout/contacts_/add'
      path: '/contacts/add'
      fullPath: '/contacts/add'
      preLoaderRoute: typeof ContactsLayoutContactsAddImport
      parentRoute: typeof ContactsLayoutImport
    }
    '/_contactsLayout/contacts_/$contactId/edit': {
      id: '/_contactsLayout/contacts_/$contactId/edit'
      path: '/contacts/$contactId/edit'
      fullPath: '/contacts/$contactId/edit'
      preLoaderRoute: typeof ContactsLayoutContactsContactIdEditImport
      parentRoute: typeof ContactsLayoutImport
    }
  }
}

// Create and export the route tree

interface ContactsLayoutRouteChildren {
  ContactsLayoutIndexRoute: typeof ContactsLayoutIndexRoute
  ContactsLayoutContactsContactIdRoute: typeof ContactsLayoutContactsContactIdRoute
  ContactsLayoutContactsAddRoute: typeof ContactsLayoutContactsAddRoute
  ContactsLayoutContactsContactIdEditRoute: typeof ContactsLayoutContactsContactIdEditRoute
}

const ContactsLayoutRouteChildren: ContactsLayoutRouteChildren = {
  ContactsLayoutIndexRoute: ContactsLayoutIndexRoute,
  ContactsLayoutContactsContactIdRoute: ContactsLayoutContactsContactIdRoute,
  ContactsLayoutContactsAddRoute: ContactsLayoutContactsAddRoute,
  ContactsLayoutContactsContactIdEditRoute:
    ContactsLayoutContactsContactIdEditRoute,
}

const ContactsLayoutRouteWithChildren = ContactsLayoutRoute._addFileChildren(
  ContactsLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ContactsLayoutRouteWithChildren
  '/': typeof ContactsLayoutIndexRoute
  '/contacts/$contactId': typeof ContactsLayoutContactsContactIdRoute
  '/contacts/add': typeof ContactsLayoutContactsAddRoute
  '/contacts/$contactId/edit': typeof ContactsLayoutContactsContactIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof ContactsLayoutIndexRoute
  '/contacts/$contactId': typeof ContactsLayoutContactsContactIdRoute
  '/contacts/add': typeof ContactsLayoutContactsAddRoute
  '/contacts/$contactId/edit': typeof ContactsLayoutContactsContactIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_contactsLayout': typeof ContactsLayoutRouteWithChildren
  '/_contactsLayout/': typeof ContactsLayoutIndexRoute
  '/_contactsLayout/contacts/$contactId': typeof ContactsLayoutContactsContactIdRoute
  '/_contactsLayout/contacts_/add': typeof ContactsLayoutContactsAddRoute
  '/_contactsLayout/contacts_/$contactId/edit': typeof ContactsLayoutContactsContactIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/contacts/$contactId'
    | '/contacts/add'
    | '/contacts/$contactId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contacts/$contactId'
    | '/contacts/add'
    | '/contacts/$contactId/edit'
  id:
    | '__root__'
    | '/_contactsLayout'
    | '/_contactsLayout/'
    | '/_contactsLayout/contacts/$contactId'
    | '/_contactsLayout/contacts_/add'
    | '/_contactsLayout/contacts_/$contactId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ContactsLayoutRoute: typeof ContactsLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ContactsLayoutRoute: ContactsLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_contactsLayout"
      ]
    },
    "/_contactsLayout": {
      "filePath": "_contactsLayout.tsx",
      "children": [
        "/_contactsLayout/",
        "/_contactsLayout/contacts/$contactId",
        "/_contactsLayout/contacts_/add",
        "/_contactsLayout/contacts_/$contactId/edit"
      ]
    },
    "/_contactsLayout/": {
      "filePath": "_contactsLayout/index.tsx",
      "parent": "/_contactsLayout"
    },
    "/_contactsLayout/contacts/$contactId": {
      "filePath": "_contactsLayout/contacts.$contactId.tsx",
      "parent": "/_contactsLayout"
    },
    "/_contactsLayout/contacts_/add": {
      "filePath": "_contactsLayout/contacts_.add.tsx",
      "parent": "/_contactsLayout"
    },
    "/_contactsLayout/contacts_/$contactId/edit": {
      "filePath": "_contactsLayout/contacts_.$contactId.edit.tsx",
      "parent": "/_contactsLayout"
    }
  }
}
ROUTE_MANIFEST_END */
